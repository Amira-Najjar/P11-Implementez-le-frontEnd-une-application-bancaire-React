{"ast":null,"code":"export function getUserProfile(token) {\n  return async dispatch => {\n    try {\n      const response = await fetch('http://localhost:3001/api/v1/user/profile', {\n        headers: {\n          'Authorization': token\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch user profile');\n      }\n      const data = await response.json();\n\n      // Vérifier si le champ `firstName` existe dans les données de profil\n      if (data.hasOwnProperty('firstName')) {\n        const userData = {\n          email: data.email,\n          token: token,\n          firstName: data.firstName\n        };\n        dispatch({\n          type: 'FETCH_USER_PROFILE_SUCCESS',\n          payload: userData\n        });\n      } else {\n        throw new Error('Failed to retrieve firstName from user profile');\n      }\n    } catch (error) {\n      dispatch({\n        type: 'FETCH_USER_PROFILE_FAILURE',\n        payload: error.message\n      });\n    }\n  };\n}","map":{"version":3,"names":["getUserProfile","token","dispatch","response","fetch","headers","ok","Error","data","json","hasOwnProperty","userData","email","firstName","type","payload","error","message"],"sources":["C:/Users/Amira/Desktop/argent-bank/src/User/userProfileActions.js"],"sourcesContent":["export function getUserProfile(token) {\r\n    return async (dispatch) => {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/api/v1/user/profile', {\r\n          \r\n          headers: {\r\n            'Authorization': token\r\n          }\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch user profile');\r\n        }\r\n  \r\n        const data = await response.json();\r\n  \r\n        // Vérifier si le champ `firstName` existe dans les données de profil\r\n        if (data.hasOwnProperty('firstName')) {\r\n          const userData = {\r\n            email: data.email,\r\n            token: token,\r\n            firstName: data.firstName\r\n          };\r\n          dispatch({ type: 'FETCH_USER_PROFILE_SUCCESS', payload: userData });\r\n        } else {\r\n          throw new Error('Failed to retrieve firstName from user profile');\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'FETCH_USER_PROFILE_FAILURE', payload: error.message });\r\n      }\r\n    };\r\n  }"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAACC,KAAK,EAAE;EAClC,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QAExEC,OAAO,EAAE;UACP,eAAe,EAAEJ;QACnB;MACF,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;;MAElC;MACA,IAAID,IAAI,CAACE,cAAc,CAAC,WAAW,CAAC,EAAE;QACpC,MAAMC,QAAQ,GAAG;UACfC,KAAK,EAAEJ,IAAI,CAACI,KAAK;UACjBX,KAAK,EAAEA,KAAK;UACZY,SAAS,EAAEL,IAAI,CAACK;QAClB,CAAC;QACDX,QAAQ,CAAC;UAAEY,IAAI,EAAE,4BAA4B;UAAEC,OAAO,EAAEJ;QAAS,CAAC,CAAC;MACrE,CAAC,MAAM;QACL,MAAM,IAAIJ,KAAK,CAAC,gDAAgD,CAAC;MACnE;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdd,QAAQ,CAAC;QAAEY,IAAI,EAAE,4BAA4B;QAAEC,OAAO,EAAEC,KAAK,CAACC;MAAQ,CAAC,CAAC;IAC1E;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}