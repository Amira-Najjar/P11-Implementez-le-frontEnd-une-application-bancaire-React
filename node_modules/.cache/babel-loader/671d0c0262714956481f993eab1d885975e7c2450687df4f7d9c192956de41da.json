{"ast":null,"code":"export function login(email, password) {\n  return async (dispatch, getState) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/v1/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const data = await response.json();\n      const {\n        token\n      } = data;\n\n      // Accéder à l'état actuel pour récupérer le firstName\n      const currentState = getState();\n      const firstName = currentState.user.firstName;\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          firstName,\n          token\n        }\n      });\n      return {\n        payload: {\n          token\n        }\n      };\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error.message\n      });\n    }\n  };\n}","map":{"version":3,"names":["login","email","password","dispatch","getState","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","token","currentState","firstName","user","type","payload","error","message"],"sources":["C:/Users/Amira/Desktop/argent-bank/src/User/userActions.js"],"sourcesContent":["export function login(email, password) {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/v1/user/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Login failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      const { token } = data;\r\n\r\n      // Accéder à l'état actuel pour récupérer le firstName\r\n      const currentState = getState();\r\n      const firstName = currentState.user.firstName;\r\n\r\n      dispatch({ type: 'LOGIN_SUCCESS', payload: { firstName, token } });\r\n\r\n      return { payload: { token } };\r\n    } catch (error) {\r\n      dispatch({ type: 'LOGIN_FAILURE', payload: error.message });\r\n    }\r\n  };\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACrC,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;MACjC;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,MAAM;QAAEC;MAAM,CAAC,GAAGF,IAAI;;MAEtB;MACA,MAAMG,YAAY,GAAGb,QAAQ,CAAC,CAAC;MAC/B,MAAMc,SAAS,GAAGD,YAAY,CAACE,IAAI,CAACD,SAAS;MAE7Cf,QAAQ,CAAC;QAAEiB,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAE;UAAEH,SAAS;UAAEF;QAAM;MAAE,CAAC,CAAC;MAElE,OAAO;QAAEK,OAAO,EAAE;UAAEL;QAAM;MAAE,CAAC;IAC/B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdnB,QAAQ,CAAC;QAAEiB,IAAI,EAAE,eAAe;QAAEC,OAAO,EAAEC,KAAK,CAACC;MAAQ,CAAC,CAAC;IAC7D;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}