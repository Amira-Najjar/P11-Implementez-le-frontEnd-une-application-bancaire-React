{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  email: null,\n  token: null,\n  error: null,\n  userName: '',\n  firstName: '',\n  lastName: '',\n  showHeaderUser: false\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.email = action.payload.email;\n      state.token = action.payload.token;\n      state.userName = action.payload.userName;\n      state.firstName = action.payload.firstName;\n      state.lastName = action.payload.lastName;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.email = null;\n      state.token = null;\n      state.userName = null;\n      state.firstName = null;\n      state.lastName = null;\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.email = null;\n      state.token = null;\n      state.userName = '';\n      state.firstName = '';\n      state.lastName = '';\n      state.error = null;\n    },\n    setFirstName: (state, action) => {\n      state.firstName = action.payload.firstName;\n    },\n    setLastName: (state, action) => {\n      state.lastName = action.payload.lastName;\n    },\n    setUserName: (state, action) => {\n      state.userName = action.payload.userName;\n    },\n    setShowHeaderUser: (state, action) => {\n      state.showHeaderUser = action.payload;\n    }\n  }\n});\nexport const {\n  loginSuccess,\n  loginFailure,\n  logout,\n  setUserName,\n  setFirstName,\n  setLastName,\n  setShowHeaderUser\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","email","token","error","userName","firstName","lastName","showHeaderUser","userSlice","name","reducers","loginSuccess","state","action","payload","loginFailure","logout","setFirstName","setLastName","setUserName","setShowHeaderUser","actions","reducer"],"sources":["C:/Users/Amira/Desktop/argent-bank/src/User/userReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  email: null,\r\n  token: null,\r\n  error: null,\r\n  userName: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  showHeaderUser: false,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    loginSuccess: (state, action) => {\r\n      state.email = action.payload.email;\r\n      state.token = action.payload.token;\r\n      state.userName = action.payload.userName;\r\n      state.firstName = action.payload.firstName;\r\n      state.lastName = action.payload.lastName;\r\n      state.error = null;\r\n    },\r\n    loginFailure: (state, action) => {\r\n      state.email = null;\r\n      state.token = null;\r\n      state.userName = null;\r\n      state.firstName = null;\r\n      state.lastName = null;\r\n      state.error = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.email = null;\r\n      state.token = null;\r\n      state.userName = '';\r\n      state.firstName = '';\r\n      state.lastName = '';\r\n      state.error = null;\r\n    },\r\n    setFirstName: (state, action) => {\r\n        state.firstName = action.payload.firstName;\r\n    },\r\n    setLastName: (state, action) => {\r\n        state.lastName = action.payload.lastName;\r\n    },\r\n    setUserName: (state, action) => {\r\n        state.userName = action.payload.userName;\r\n    },\r\n    setShowHeaderUser: (state, action) => {\r\n        state.showHeaderUser = action.payload;\r\n      },\r\n}\r\n});\r\n\r\nexport const {\r\n    loginSuccess,\r\n    loginFailure,\r\n    logout,\r\n    setUserName,\r\n    setFirstName,\r\n    setLastName,\r\n    setShowHeaderUser,\r\n  } = userSlice.actions;\r\n  export default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,cAAc,EAAE;AAClB,CAAC;AAED,MAAMC,SAAS,GAAGT,WAAW,CAAC;EAC5BU,IAAI,EAAE,MAAM;EACZT,YAAY;EACZU,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACX,KAAK,GAAGY,MAAM,CAACC,OAAO,CAACb,KAAK;MAClCW,KAAK,CAACV,KAAK,GAAGW,MAAM,CAACC,OAAO,CAACZ,KAAK;MAClCU,KAAK,CAACR,QAAQ,GAAGS,MAAM,CAACC,OAAO,CAACV,QAAQ;MACxCQ,KAAK,CAACP,SAAS,GAAGQ,MAAM,CAACC,OAAO,CAACT,SAAS;MAC1CO,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO,CAACR,QAAQ;MACxCM,KAAK,CAACT,KAAK,GAAG,IAAI;IACpB,CAAC;IACDY,YAAY,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACX,KAAK,GAAG,IAAI;MAClBW,KAAK,CAACV,KAAK,GAAG,IAAI;MAClBU,KAAK,CAACR,QAAQ,GAAG,IAAI;MACrBQ,KAAK,CAACP,SAAS,GAAG,IAAI;MACtBO,KAAK,CAACN,QAAQ,GAAG,IAAI;MACrBM,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,MAAM,EAAGJ,KAAK,IAAK;MACjBA,KAAK,CAACX,KAAK,GAAG,IAAI;MAClBW,KAAK,CAACV,KAAK,GAAG,IAAI;MAClBU,KAAK,CAACR,QAAQ,GAAG,EAAE;MACnBQ,KAAK,CAACP,SAAS,GAAG,EAAE;MACpBO,KAAK,CAACN,QAAQ,GAAG,EAAE;MACnBM,KAAK,CAACT,KAAK,GAAG,IAAI;IACpB,CAAC;IACDc,YAAY,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACP,SAAS,GAAGQ,MAAM,CAACC,OAAO,CAACT,SAAS;IAC9C,CAAC;IACDa,WAAW,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO,CAACR,QAAQ;IAC5C,CAAC;IACDa,WAAW,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACR,QAAQ,GAAGS,MAAM,CAACC,OAAO,CAACV,QAAQ;IAC5C,CAAC;IACDgB,iBAAiB,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACL,cAAc,GAAGM,MAAM,CAACC,OAAO;IACvC;EACN;AACA,CAAC,CAAC;AAEF,OAAO,MAAM;EACTH,YAAY;EACZI,YAAY;EACZC,MAAM;EACNG,WAAW;EACXF,YAAY;EACZC,WAAW;EACXE;AACF,CAAC,GAAGZ,SAAS,CAACa,OAAO;AACrB,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}